{"version":3,"sources":["utils/API.js","components/EmployeeList.js","components/Header.js","App.js","index.js"],"names":["usersList","axios","get","EmployeeList","state","users","search","sortDirection","col","searchUpdate","e","setState","target","value","createEmployeeTable","searchResults","sort","sortEmployeeList","map","user","index","src","image","alt","className","first","last","href","email","username","city","country","employeeSorter","handleSortDirectionChange","a","b","API","then","res","allEmployees","data","results","name","login","picture","medium","location","nat","catch","err","console","log","this","toLowerCase","filter","includes","onChange","type","placeholder","aria-label","scope","onClick","React","Component","Header","class","aria-hidden","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2793ff7c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nfunction usersList() {\n  return axios.get(\"https://randomuser.me/api/?results=25&nat=AU,BR,CA,CH,DE,DK,ES,FI,FR,GB,IE,NO,NL,NZ,TR,US\");\n}\n\nexport default {\n  usersList\n};\n","import React from \"react\";\nimport \"./style.css\";\nimport API from \"../utils/API\";\n\nclass EmployeeList extends React.Component {\n  //setting the state for the EmployeeList\n  state = {\n    users: [],\n    search: \"\",\n    sortDirection: \"\",\n    col: \"\",\n  };\n\n  //get me a randomized list of all the employees after the component mounts\n  componentDidMount() {\n    API.usersList()\n      .then((res) => {\n        //using MAP method to map over the response creating an array of employees\n        const allEmployees = res.data.results.map((user) => {\n          return {\n            first: user.name.first,\n            last: user.name.last,\n            email: user.email,\n            username: user.login.username,\n            image: user.picture.medium,\n            city: user.location.city,\n            state: user.location.state,\n            country: user.nat,\n          };\n        });\n        //add this array of workers to our state\n        this.setState({ users: allEmployees });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  //when the user enters a letter in the search bar, reflect that in the state\n  searchUpdate = (e) => {\n    this.setState({ search: e.target.value });\n  };\n\n  //using FILTER method to show employees that match search criteria\n  searchResults() {\n    const search = this.state.search.toLowerCase();\n    return this.state.users.filter((user) => {\n      return (\n        user.first.toLowerCase().includes(search) ||\n        user.last.toLowerCase().includes(search)\n      );\n    });\n  }\n\n  //using MAP function to create a table of employees map over it\n  createEmployeeTable = () => {\n    return this.searchResults()\n      .sort(this.sortEmployeeList)\n      .map((user, index) => {\n        return (\n          <tr key={index}>\n            <td>\n              <img src={user.image} alt=\"user\"></img>\n            </td>\n            <td className=\"align-middle\">{user.first}</td>\n            <td className=\"align-middle\">{user.last}</td>\n            <td className=\"align-middle\">\n              {/* using template literal to make email addresses dynamic */}\n              <a href={`mailto:${user.email}`}>{user.email}</a>\n            </td>\n            <td className=\"align-middle\">{user.username}</td>\n            <td className=\"align-middle\">{user.city}</td>\n            <td className=\"align-middle\">{user.state}</td>\n            <td className=\"align-middle\">{user.country}</td>\n          </tr>\n        );\n      });\n  };\n\n  //when the columns are sorted, indicate which direction\n  employeeSorter = (col) => {\n    return this.state.col === col\n      ? `category ${this.state.sortDirection}`\n      : `category`;\n  };\n\n  //when the columns are sorted, indicate which direction\n  handleSortDirectionChange = (col) => {\n    this.state.col === col && this.state.sortDirection === \"ascending\"\n      ? this.setState({ sortDirection: \"descending\", col: col })\n      : this.setState({ sortDirection: \"ascending\", col: col });\n  };\n\n  //function to return 1 or -1 to sort function depending on sort direction\n  sortEmployeeList = (a, b) => {\n    if (a[this.state.col] < b[this.state.col]) {\n      return this.state.sortDirection === \"ascending\" ? -1 : 1;\n    } else if (a[this.state.col] > b[this.state.col]) {\n      return this.state.sortDirection === \"ascending\" ? 1 : -1;\n    }\n    return 0;\n  };\n\n  //render the user container including search field\n  render() {\n    return (\n      <>\n        <div className=\"input-group justify-content-center w-50 m-auto\">\n          <div className=\"input-group-prepend\"></div>\n          <input\n            onChange={this.searchUpdate}\n            type=\"search\"\n            className=\"form-control form-control-md form-group p-1 m-1\"\n            placeholder=\"Search\"\n            aria-label=\"SearchBox\"\n          />\n        </div>\n        <div className=\"table table-border table-hover table-responsive-sm m-auto pt-2 pl-5 pr-5 pb-5\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Img</th>\n                <th scope=\"col\">\n                  <span\n                    className={this.employeeSorter(\"first\")}\n                    onClick={() => {\n                      this.handleSortDirectionChange(\"first\");\n                    }}\n                  >\n                    First\n                  </span>\n                </th>\n                <th scope=\"col\">\n                  <span\n                    className={this.employeeSorter(\"last\")}\n                    onClick={() => this.handleSortDirectionChange(\"last\")}\n                  >\n                    Last\n                  </span>\n                </th>\n                <th scope=\"col\">\n                  <span\n                    className={this.employeeSorter(\"email\")}\n                    onClick={() => this.handleSortDirectionChange(\"email\")}\n                  >\n                    Email\n                  </span>\n                </th>\n                <th scope=\"col\">\n                  <span\n                    className={this.employeeSorter(\"username\")}\n                    onClick={() => this.handleSortDirectionChange(\"username\")}\n                  >\n                    Username\n                  </span>\n                </th>\n                <th scope=\"col\">\n                  <span\n                    className={this.employeeSorter(\"city\")}\n                    onClick={() => this.handleSortDirectionChange(\"city\")}\n                  >\n                    City\n                  </span>\n                </th>\n                <th scope=\"col\">\n                  <span\n                    className={this.employeeSorter(\"state\")}\n                    onClick={() => this.handleSortDirectionChange(\"state\")}\n                  >\n                    State\n                  </span>\n                </th>\n                <th scope=\"col\">\n                  <span\n                    className={this.employeeSorter(\"country\")}\n                    onClick={() => this.handleSortDirectionChange(\"country\")}\n                  >\n                    Country\n                  </span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>{this.createEmployeeTable()}</tbody>\n          </table>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default EmployeeList;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <h1 className=\"title mt-5\">\n        <i class=\"fa fa-id-badge\" aria-hidden=\"true\"></i> Employee Directory\n      </h1>\n      <p className=\"font-weight-bold\">\n        Use the categories in the columns to filter or narrow your search\n        results by searching by name.\n      </p>\n    </div>\n  );\n}\nexport default Header;\n","import React from \"react\";\nimport EmployeeList from \"./components/EmployeeList\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <EmployeeList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}